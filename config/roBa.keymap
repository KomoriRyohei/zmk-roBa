#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&screen_shot INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        screen_shot: to_layer_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(NUMBER_4))>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&screen_shot>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt ESCAPE Q  &kp W         &kp E         &kp R             &kp T                                             &kp Y                &kp U  &kp I      &lt 5 O       &kp P
&mt LCTRL A   &kp S         &kp D         &kp F             &kp G        &lt 6 ESCAPE        &mt UNDER MINUS  &kp H                &kp J  &kp K      &lt 3 L       &kp LEFT_SHIFT
&kp Z         &kp X         &kp C         &kp V             &kp B        &mt EXCL TAB        &mt SEMI COLON   &kp N                &kp M  &kp COMMA  &mt EXCL DOT  &mt QUESTION SLASH
&kp LA(A)     &kp LEFT_ALT  &kp LEFT_GUI  &lt 5 LANGUAGE_1  &lt 3 SPACE  &lt 2 LANGUAGE_2    &kp BACKSPACE    &mt RIGHT_GUI ENTER                                  &screen_shot
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                &kp F1               &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans    &trans              &kp F6               &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans    &trans              &trans               &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans    &kp LG(LEFT_ARROW)  &kp LG(RIGHT_ARROW)                          &kp F12
            >;
        };

        NUM {
            bindings = <
&kp NUMBER_1   &kp NUMBER_2      &kp NUMBER_3    &kp NUMBER_4          &kp NUMBER_5                                &kp NUMBER_6     &kp NUMBER_7           &kp NUMBER_8       &kp NUMBER_9       &kp NUMBER_0
&kp AT         &kp DOLLAR        &kp PERCENT     &kp HASH              &kp TILDE      &kp EQUAL    &kp UNDERSCORE  &kp EXCLAMATION  &kp ASTERISK           &kp DOUBLE_QUOTES  &kp EQUAL          &kp GRAVE
&kp LESS_THAN  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp AMPERSAND  &kp PIPE     &kp BACKSLASH   &kp PLUS         &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE    &kp RIGHT_BRACKET  &kp GREATER_THAN
&kp CARET      &trans            &trans          &trans                &trans         &trans       &kp LA(Z)       &kp LA(SPACE)                                                                 &kp SINGLE_QUOTE
            >;

            sensor-bindings = <&inc_dec_kp LS(PAGE_UP) LS(PAGE_DOWN)>;
        };

        ARROW {
            bindings = <
&trans          &kp LC(LS(J))           &kp LC(LS(K))     &kp LC(LS(L))            &trans                               &trans             &trans          &trans          &trans           &trans
&trans          &kp LC(LEFT_ARROW)      &kp LC(UP_ARROW)  &kp LC(RIGHT_ARROW)      &trans  &trans    &trans             &trans             &mkp LCLK       &kp UP_ARROW    &mkp RCLK        &mkp MCLK
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans            &kp LG(LS(RIGHT_ARROW))  &trans  &trans    &trans             &trans             &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans          &trans                  &trans            &trans                   &trans  &trans    &kp LS(LG(MINUS))  &kp LS(LG(EQUAL))                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                &trans               &kp LC(U)           &kp LC(D)            &kp LC(W)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans              &kp LC(LA(A))        &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)  &kp LC(E)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans              &trans               &trans              &trans               &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LG(LEFT_ARROW)  &kp LG(RIGHT_ARROW)                                                      &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
